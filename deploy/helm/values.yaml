AppVersion: 0.0.0-develop
global:
  registries: []
  autoReload: "true"
  image:
    pullPolicy: "Always"

url:
  domains: [ruthenium.my-cloud.me]

app:
  type: statefulset
  replicas: 1
  volumes:
  - name: shared-data
    emptyDir: {}
  containers:
  - name: node
    image:
      name: ghcr.io/my-cloud/ruthenium
      tagOverride: latest
      #pullPolicy: "IfNotPresent"
    #autoReload: "true"
    command: [/app/node]
    args: []
    service:
    - protocol: TCP
      port: "8106"
      targetPort: "8106"
    annotations:
    health:
      # type: grpc   # can be either: grpc httpGet tcpSocket
      # liveness:
      #   initialDelaySeconds: 40
      #   periodSeconds: 5
      # readiness:
      #   initialDelaySeconds: 30
      #   periodSeconds: 1
    resources:
      requests:
        memory: "128Mi"
      limits:
        memory: "512Mi"
    storage:
      data: /tmp
    secret:
    env:
      PRIVATE_KEY: ""

  - name: ui
    image:
      name: ghcr.io/my-cloud/ruthenium
      tagOverride: latest
      #pullPolicy: "IfNotPresent"
    #autoReload: "true"
    command: [/bin/bash]
    args: [ "-c", "'sleep 3; /app/ui'"]
    service:
    - protocol: TCP
      port: "80"
      targetPort: "8080"
    annotations:
    health:
      # type: grpc  # can be either: grpc httpGet tcpSocket
      # liveness:
      #   path: /health/liveness
      #   initialDelaySeconds: 120
      #   periodSeconds: 5
      # readiness:
      #   path: /health/readiness
      #   initialDelaySeconds: 30
      #   periodSeconds: 1
    resources:
      requests:
        memory: "128Mi"
      limits:
        memory: "512Mi"
    storage:
      data: /data
    secret:
    env:
      HOST_IP: "127.0.0.1"
      PRIVATE_KEY: ""

  storage:
    data:
      accessModes: [ "ReadWriteMany" ]
      storageClass: kube-data
      size: 128M